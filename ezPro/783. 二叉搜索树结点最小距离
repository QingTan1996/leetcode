给定一个二叉搜索树的根结点 root, 返回树中任意两节点的差的最小值。

//递归理解不深
int res = INT_MAX, pre = -1;
    int minDiffInBST(TreeNode* root) {
        if (root->left != NULL) minDiffInBST(root->left);
        if (pre >= 0) res = min(res, root->val - pre);
        pre = root->val;
        if (root->right != NULL) minDiffInBST(root->right);
        return res;
    }

//递归还是理解不深啊
void getEle(TreeNode *root,vector<int> &node)
{
    if(root)
    {
        getEle(root->left,node);
        getEle(root->right,node);
        node.push_back(root->val);
    }
}

int minDiffInBST(TreeNode* root) 
{
    if(!root)   return INT_MIN;
    int res=0;
    vector<int> num;
    getEle(root,num);
    sort(num.begin(),num.end());
    for(int i=0;i<num.size()-1;++i)
        res=min(res,abs(num[i]-num[i+1]));
    return res;
}