给定一个非空整数数组，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。
说明：
你的算法应该具有线性时间复杂度。 你可以不使用额外空间来实现吗？

int singleNumber(vector<int>& nums) 
{
    int res=0;
    for(auto i:nums)
        res^=i;
    return res;
}

int singleNumber(vector<int>& nums) 
{
    int ret=0;
    unordered_map<int,int> ownSet;
    for(auto i:nums)
        ownSet[i]++;
    for(auto i:ownSet)
        if(i.second==1)
            ret=i.first;
    return ret;
}